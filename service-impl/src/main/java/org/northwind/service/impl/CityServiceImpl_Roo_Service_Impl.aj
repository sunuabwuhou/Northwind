// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.northwind.service.impl;

import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.northwind.model.City;
import org.northwind.repository.CityRepository;
import org.northwind.service.impl.CityServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect CityServiceImpl_Roo_Service_Impl {
    
    declare @type: CityServiceImpl: @Service;
    
    declare @type: CityServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private CityRepository CityServiceImpl.cityRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param cityRepository
     */
    @Autowired
    public CityServiceImpl.new(CityRepository cityRepository) {
        setCityRepository(cityRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return CityRepository
     */
    public CityRepository CityServiceImpl.getCityRepository() {
        return cityRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param cityRepository
     */
    public void CityServiceImpl.setCityRepository(CityRepository cityRepository) {
        this.cityRepository = cityRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return City
     */
    public City CityServiceImpl.findOne(Long id) {
        return getCityRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<City> CityServiceImpl.findAll(Iterable<Long> ids) {
        return getCityRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<City> CityServiceImpl.findAll() {
        return getCityRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long CityServiceImpl.count() {
        return getCityRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<City> CityServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getCityRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<City> CityServiceImpl.getEntityType() {
        return City.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> CityServiceImpl.getIdType() {
        return Long.class;
    }
    
}
